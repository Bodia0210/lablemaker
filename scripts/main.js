// ------- –õ–æ–≥–æ—Ç–∏–ø–∏ –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫—ñ–≤ -------
const logoMap = {
  "TACO": "svg/taco.svg",
  "TASK": "svg/taskcontrols.png",
  "Modine": "svg/modine.svg",
  "SpiraxSarco": "svg/spiraxsarco.svg",
  "driSteem": "svg/dristeem.svg",
  "AQC": "svg/aqc.svg",
  "Daikin": "svg/daikin.svg",
  "Direct Coil": "svg/directcoil.jpg",
  "Ecogreen": "svg/ecogreen.svg",
  "HVAC Solution": "svg/hvac.svg",
  "IEC": "svg/iec.svg",
  "Mafna": "svg/mafna.svg",
  "Nova Flex": "svg/novaflex.svg",
  "Oxygen 8": "svg/oxygen8.svg",
  "PB": "svg/pb.svg",
  "Pool Pac": "svg/poolpak.svg",
  "RGF": "svg/rgf.svg",
  "Senior Flexonics": "svg/seniorflexonics.svg",
  "ClimateCraft": "svg/climacraft.svg",
  "WEG": "svg/weg.svg",
  "ClimaCool": "svg/climacool.svg"
};

window.addEventListener("DOMContentLoaded", () => {
  // --- –ª–æ–≥–æ—Ç–∏–ø –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫–∞ ---
  const companySelect = document.getElementById("companySelect");
  const logoImg = document.getElementById("company-logo");
  const updateLogo = () => {
    const key = companySelect?.value || "";
    logoImg.src = logoMap[key] || "";
    logoImg.alt = key ? `${key} Logo` : "Company Logo";
  };
  companySelect?.addEventListener("change", updateLogo);
  updateLogo();

  // --- –¥–∞—Ç–∞/—á–∞—Å ---
  const now = new Date();
  const pad = n => n.toString().padStart(2, "0");
  const formatted = `${pad(now.getHours())}${pad(now.getMinutes())} ${pad(now.getMonth()+1)}/${pad(now.getDate())}/${now.getFullYear()}`;
  const dt = document.getElementById("delivery-time-date");
  if (dt) dt.value = formatted;

  // --- –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü—ñ—è Dimensions –∑–∞ Quantity ---
  const totalPiecesInput = document.getElementById("total-pieces");
  const dimensionsContainer = document.getElementById("dimensionsContainer");
  totalPiecesInput?.addEventListener("input", () => {
    const count = parseInt(totalPiecesInput.value, 10);
    dimensionsContainer.innerHTML = "";
    if (!isNaN(count) && count > 0) {
      for (let i = 1; i <= count; i++) {
        const wrap = document.createElement("div");
        wrap.className = "field";
        const input = document.createElement("input");
        input.type = "text";
        input.name = `dimension${i}`;
        input.placeholder = `WxLxH ${i}`;
        input.className = "short";
        wrap.appendChild(input);
        dimensionsContainer.appendChild(wrap);
      }
    }
  });

  // --- Project Name -> –¥—Ä—É–∫–æ–≤–∞–Ω–∏–π –±–ª–æ–∫ —ñ–∑ –ø–µ—Ä–µ–Ω–æ—Å–æ–º ---
  (function () {
    const src = document.getElementById('project-name');
    const out = document.getElementById('project-name-print');
    if (!src || !out) return;
    const sync = () => { out.textContent = src.value || src.placeholder || ''; };
    src.addEventListener('input', sync);
    window.addEventListener('beforeprint', sync);
    sync();
  })();

  // --- Package Type -> –¥—Ä—É–∫ –±–µ–∑ ¬´–≥–∞–ª–æ—á–∫–∏¬ª ---
  (function () {
    const sel = document.getElementById('package-type');
    const out = document.getElementById('package-type-print');
    if (!sel || !out) return;
    const text = () => sel.options[sel.selectedIndex]?.text || '';
    const sync = () => { out.textContent = text(); };
    sel.addEventListener('change', sync);
    window.addEventListener('beforeprint', sync);
    sync();
  })();

  // --- Location -> –¥—Ä—É–∫ –±–µ–∑ ¬´–≥–∞–ª–æ—á–∫–∏¬ª ---
  (function () {
    const sel = document.getElementById('location');
    const out = document.getElementById('location-print');
    if (!sel || !out) return;
    const text = () => sel.options[sel.selectedIndex]?.text || '';
    const sync = () => { out.textContent = text(); };
    sel.addEventListener('change', sync);
    window.addEventListener('beforeprint', sync);
    sync();
  })();

  // --- –∫–Ω–æ–ø–∫–∞ –¥—Ä—É–∫—É ---
  document.getElementById("printBtn")?.addEventListener("click", () => window.print());
});
window.addEventListener("DOMContentLoaded", () => {
  // ... –∑–∞–ª–∏—à–∞—î–º–æ —Ç–≤—ñ–π —ñ—Å–Ω—É—é—á–∏–π –∫–æ–¥ —è–∫ —î

  // üîÅ –î–æ–¥–∞—î–º–æ print-–≤–µ—Ä—Å—ñ—é –¥–ª—è –≤—Å—ñ—Ö input[type="text"]
  const updatePrintFields = () => {
    const inputs = document.querySelectorAll('input[type="text"]');

    inputs.forEach(input => {
      // –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ, —è–∫—â–æ –≤–∂–µ —î print-–∫–ª–æ–Ω
      if (input.nextElementSibling?.classList?.contains('only-print')) return;

      const div = document.createElement("div");
      div.className = "only-print";
      div.style.whiteSpace = "pre-wrap";
      div.textContent = input.value || input.placeholder || '';
      input.insertAdjacentElement('afterend', div);

      // üîÅ –ü—ñ–¥ —á–∞—Å –∑–º—ñ–Ω–∏ –∑–Ω–∞—á–µ–Ω–Ω—è ‚Äî –æ–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç
      input.addEventListener("input", () => {
        div.textContent = input.value || input.placeholder || '';
      });
    });
  };

  updatePrintFields(); // –æ–¥—Ä–∞–∑—É —Å—Ç–≤–æ—Ä—é—î–º–æ
  window.addEventListener("beforeprint", updatePrintFields); // –æ–Ω–æ–≤–ª—é—î–º–æ –ø–µ—Ä–µ–¥ –¥—Ä—É–∫–æ–º
});

// ===== AUTO RESIZE FONT for PRINT version =====
(function () {
  const input = document.getElementById('project-name');
  const printOut = document.getElementById('project-name-print');

  if (!input || !printOut) return;

  const MIN = 18;  // –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä —à—Ä–∏—Ñ—Ç—É
  const MAX = 72;  // –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä —à—Ä–∏—Ñ—Ç—É

  const canvas = document.createElement('canvas');
  const ctx = canvas.getContext('2d');

  function getFont(size) {
    return `700 ${size}px "Times New Roman", serif`;
  }

  function measure(text, size) {
    ctx.font = getFont(size);
    return ctx.measureText(text).width;
  }

  function fitSize(text, containerWidth, min=MIN, max=MAX) {
    if (!text) return min;
    let lo = min, hi = max, best = min;
    for (let i = 0; i < 20; i++) {
      const mid = Math.floor((lo + hi) / 2);
      if (measure(text, mid) <= containerWidth) {
        best = mid; lo = mid + 1;
      } else {
        hi = mid - 1;
      }
    }
    return best;
  }

  function update() {
    const text = input.value || input.placeholder || '';
    printOut.textContent = text;

    // –¥–æ—Å—Ç—É–ø–Ω–∞ —à–∏—Ä–∏–Ω–∞ –¥—Ä—É–∫–æ–≤–∞–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    const w = printOut.clientWidth || 600;
    const size = fitSize(text, w);

    // –∑–∞–¥–∞—î–º–æ –∑–º—ñ–Ω–Ω—É –¥–ª—è CSS
    printOut.style.setProperty('--print-size', size + 'px');
  }

  // –æ–Ω–æ–≤–ª—é—î–º–æ –ø—ñ–¥ —á–∞—Å –≤–≤–µ–¥–µ–Ω–Ω—è —Ç–∞ –ø–µ—Ä–µ–¥ –¥—Ä—É–∫–æ–º
  input.addEventListener('input', update);
  window.addEventListener('beforeprint', update);

  update();
})();

// ===== AUTO RESIZE FONT for PRINT only =====
(function () {
  const input = document.getElementById('project-name');
  const printOut = document.getElementById('project-name-print');
  if (!input || !printOut) return;

  const MIN = 18;   // –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –∫–µ–≥–ª—å –Ω–∞ –¥—Ä—É–∫
  const MAX = 72;   // –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π –∫–µ–≥–ª—å –Ω–∞ –¥—Ä—É–∫

  const canvas = document.createElement('canvas');
  const ctx = canvas.getContext('2d');

  function measure(text, size) {
    // –Ω–∞ –¥—Ä—É—Ü—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è Times New Roman (–¥–∏–≤. —Ç–≤–æ—ó –ø—Ä–∞–≤–∏–ª–∞ @media print)
    ctx.font = `700 ${size}px "Times New Roman", serif`;
    return ctx.measureText(text).width;
  }

  function fitSize(text, width, min = MIN, max = MAX) {
    if (!text) return min;
    let lo = min, hi = max, best = min;
    for (let i = 0; i < 20; i++) {
      const mid = (lo + hi) >> 1;
      if (measure(text, mid) <= width) { best = mid; lo = mid + 1; }
      else { hi = mid - 1; }
    }
    return best;
  }

  function update() {
    const text = input.value || input.placeholder || '';
    printOut.textContent = text;

    // —à–∏—Ä–∏–Ω–∞ –±–µ—Ä–µ—Ç—å—Å—è –∑ –±–∞—Ç—å–∫–∞ (—É –¥—Ä—É—Ü—ñ printOut –≤–∏–¥–∏–º–∏–π —ñ –º–∞—î layout)
    const container = printOut.parentElement || printOut;
    const W = (container.clientWidth || 600) * 0.92; // –≤—Ä–∞—Ö—É—î–º–æ max-width:92%
    const size = fitSize(text, W);

    // –ø–µ—Ä–µ–¥–∞—î–º–æ –∫–µ–≥–ª—å —É CSS
    printOut.style.setProperty('--print-size', size + 'px');
  }

  // –û–±–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–∏ –≤–≤–æ–¥—ñ —Ç–∞ –ø–µ—Ä–µ–¥ –¥—Ä—É–∫–æ–º
  input.addEventListener('input', update);

  // Chrome/Edge: —Å–ø—Ä–∞—Ü—å–æ–≤—É—î –ø—Ä–∏ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ –¥—ñ–∞–ª–æ–≥—É –¥—Ä—É–∫—É
  window.addEventListener('beforeprint', update);

  // Safari/—ñ–Ω—à—ñ: –ø—ñ–¥—Å—Ç—Ä–∞—Ö—É—î–º–æ—Å—å —á–µ—Ä–µ–∑ matchMedia
  const mm = window.matchMedia('print');
  if (mm && typeof mm.addEventListener === 'function') {
    mm.addEventListener('change', e => { if (e.matches) update(); });
  }

  update();
})();
 